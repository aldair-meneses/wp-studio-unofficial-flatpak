name: Build Studio Linux

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Official tag from WordPress Studio by Automattic"
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout upstream at tag
        if: false
        uses: actions/checkout@v4
        with:
          repository: Automattic/studio
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Setup Node.js
        if: false
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        if: false
        run: npm ci
        working-directory: .

      - name: Build package
        if: false
        run: |
          npm run package
          chmod +x out/Studio-linux-x64/studio

      - name: Pack artifact
        if: false
        run: |
          tar -czf studio-linux-${{ github.event.inputs.tag }}.tar.gz -C out Studio-linux-x64

      - name: Create tag if not exists
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.FLATPAK_STUDIO_TOKEN }}
          script: |
            const tag = '${{ github.event.inputs.tag }}';
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tag}`
              });
              console.log(`Tag ${tag} already exists.`);
            } catch (err) {
              if (err.status === 404) {
                await github.rest.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `refs/tags/${tag}`,
                  sha: context.sha
                });
                console.log(`Tag ${tag} created.`);
              } else {
                throw err;
              }
            }

      - name: Release
        if: false
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: "Studio Linux ${{ github.event.inputs.tag }}"
          files: studio-linux-${{ github.event.inputs.tag }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
